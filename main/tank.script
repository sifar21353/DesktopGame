function init(self)
	-- Defining the equation: current set to 1x^2 + 4x + 0
	eq = {1, 9, 0}
	-- Finding out the roots of the equation
	root1 = (-eq[2] + math.sqrt(eq[2] * eq[2] - 4 * eq[1] * eq[3])) / (2 * eq[1])
	root2 = (-eq[2] - math.sqrt(eq[2] * eq[2] - 4 * eq[1] * eq[3])) / (2 * eq[1])
	-- Setting the right increment
	difference = math.abs(((root1 + root2) / 2) * ((root1 + root2) / 2) * eq[1] + ((root1 + root2) / 2) * eq[2] + eq[3])
	window_x, window_y = window.get_size()
	window_x = window_x / 2
	window_y = window_y / 2
	increment = (math.abs(root1 - root2)) / (window_x / 10)
	mulitiplier = 1 / increment
	points = {}
	-- Generating points
	for i = root2, root1, increment do
		points[(i + (math.abs(root1 - root2))) * mulitiplier] = (i * i * eq[1] + i * eq[2] + eq[3]) + difference
	end
	for key, val in pairs(points) do
		print(key, val)
	end
	x_value = 0
end

function update(self, dt)
	pos = go.get_position()
	if x_value < 129 then do
		go.set_position(vmath.vector3(x_value * 10, points[x_value] * 100, 0))
		x_value = x_value + 1
	end
end
end